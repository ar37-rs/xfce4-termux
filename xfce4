#!/data/data/com.termux/files/usr/bin/bash

export XDG_SESSION_TYPE=x11
export GDK_BACKEND=x11

# Kill open X11 and pulse processes
kx11pls() {
    kill -9 $(pgrep -f "termux.x11") 2>/dev/null
    kill -9 $(pgrep -f "virgl_test_server_android") 2>/dev/null
    kill -9 $(pgrep -f "virgl_test_server") 2>/dev/null
    kill -9 $(pgrep -f "pulseaudio") 2>/dev/null
}


if [[ "$@" == "q" ]]; then
    am broadcast -a com.termux.x11.ACTION_STOP -p com.termux.x11
    echo
    echo "X11 process terminated!"
    echo
    kx11pls
    exit
elif [[ "$@" == "sdcard=true" ]]; then
    pkg install termux-api && termux-setup-storage
    echo "sdcard configured."
    exit
elif [[ "$@" == "install" ]]; then
    pkg update && pkg install x11-repo && pkg install termux-x11-nightly xfce4 xfdesktop xfce*-goodies pulseaudio xfce*-pulseaudio-plugin firefox wget virglrenderer-android virglrenderer termux-api angle-android && cd && rm -rf ~/vgl && wget https://github.com/ar37-rs/virgl-angle-termux/releases/download/latest/vgl && chmod +x ~/vgl
    echo "done."
    exit
elif [[ "$1" == "driver=virpipe" ]]; then
    if [ ! -f ~/vgl ]; then
        cd && pkg install wget virglrenderer-android virglrenderer angle-android openssl
rm -rf ~/vgl && wget https://github.com/ar37-rs/virgl-angle-termux/releases/download/latest/vgl && chmod +x ~/vgl
        ~/vgl i
    fi
    if [ -f ~/.xfce4-llvmpipe ]; then
        rm -rf ~/.xfce4-llvmpipe
    fi
    if [ -f ~/.xfce4-llvmpipe-zink ]; then
        rm -rf ~/.xfce4-llvmpipe-zink
    fi
    touch ~/.xfce4-vgl
    echo "xfce4 using virglrender (virpipe) driver."
    kx11pls
    exit
elif [[ "$1" == "driver=lvp" ]]; then
    if [ -f ~/.xfce4-vgl ]; then
        rm -rf ~/.xfce4-vgl
    fi
    if [ -f ~/.xfce4-llvmpipe-zink ]; then
        rm -rf ~/.xfce4-llvmpipe-zink
    fi
    touch ~/.xfce4-llvmpipe
    echo "xfce4 using llvmpipe driver."
    kx11pls
    exit
elif [[ "$1" == "driver=lvp-zink" ]]; then
    if [ -f ~/.xfce4-vgl ]; then
        rm -rf ~/.xfce4-vgl
    fi
    if [ -f ~/.xfce4-llvmpipe ]; then
        rm -rf ~/.xfce4-llvmpipe
    fi
    pkg install mesa-vulkan-icd-swrast vulkan-loader-generic
    touch ~/.xfce4-llvmpipe-zink
    echo "xfce4 using llvmpipe zink driver."
    kx11pls
    exit
elif [[ "$1" == "driver=default" ]]; then
    if [ -f ~/.xfce4-vgl ]; then
        rm -rf ~/.xfce4-vgl
    fi
    if [ -f ~/.xfce4-llvmpipe ]; then
        rm -rf ~/.xfce4-llvmpipe
    fi
    if [ -f ~/.xfce4-llvmpipe-zink ]; then
        rm -rf ~/.xfce4-llvmpipe-zink
    fi
    echo "xfce4 using default driver."
    kx11pls
    exit
elif [[ "$1" == "dri3=true" ]]; then
    touch ~/.xfce4-dri3
    echo "termux-x11 dri3 is activated."
    kx11pls
    exit
elif [[ "$1" == "dri3=false" ]]; then
    if [ -f ~/.xfce4-dri3 ]; then
        rm -rf ~/.xfce4-dri3
    fi
    echo "termux-x11 dri3 is deactivated."
    kx11pls
    exit
elif [[ "$1" == "display=0" ]]; then
    if [ -f ~/.xfce4-display-1 ]; then
        rm -rf ~/.xfce4-display-1
    fi
    echo "termux-x11 is using display=:0"
    kx11pls
    exit
elif [[ "$1" == "display=1" ]]; then
    touch ~/.xfce4-display-1
    echo "termux-x11 is using display=:1"
    kx11pls
    exit
elif [[ "$1" == "pulse-glibc=true" ]]; then
    touch ~/.xfce4-pulse-glibc
    echo "Using pulseaudio glibc."
    kx11pls
    exit
elif [[ "$1" == "pulse-glibc=false" ]]; then
    if [ -f ~/.xfce4-pulse-glibc ]; then
        rm -rf ~/.xfce4-pulse-glibc
    fi
    echo "Using pulseaudio bionic."
    kx11pls
    exit
elif [[ "$1" == "s" ]]; then

# Configure XDG
kx11pls
chmod 700 /data/data/com.termux/files/usr/tmp
export XDG_RUNTIME_DIR=${TMPDIR}

# Start Pulseaudio
if [ -f ~/.xfce4-pulse-glibc ]; then
    grun -s /data/data/com.termux/files/usr/bin/pulseaudio --start --exit-idle-time=-1 &
    grun -s /data/data/com.termux/files/usr/bin/pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1 &
    echo "Using pulseaudio glibc."
else
    pulseaudio --start --load="module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1" --exit-idle-time=-1 &
    echo "Using pulseaudio bionic."
fi

sleep 1

if [ -f ~/.xfce4-llvmpipe ]; then
    export LIBGL_ALWAYS_SOFTWARE=1
elif [ -f ~/.xfce4-llvmpipe-zink ]; then
    export LIBGL_ALWAYS_SOFTWARE=1
    export MESA_LOADER_DRIVER_OVERRIDE=zink
    export ZINK_DESCRIPTORS=lazy
    # export LP_NUM_THREADS=4
fi

# Start Termux X11 & Launch Termux X11 main activity
if [ -f ~/.xfce4-dri3 ]; then
   if [ -f ~/.xfce4-display-1 ]; then
       termux-x11 -ac -once :1 &
       echo "termux-x11 is using DISPLAY=:1"
   else
       termux-x11 -ac -once :0 &
       echo "termux-x11 is using DISPLAY=:0"
   fi
    echo "termux-x11 with DRI3 enabled."
else
   if [ -f ~/.xfce4-display-1 ]; then
       termux-x11 -ac -once -disable-dri3 :1 &
       echo "termux-x11 is using DISPLAY=:1"
   else
       echo "termux-x11 is using DISPLAY=:0"
       termux-x11 -ac -once -disable-dri3 :0 &
   fi
    echo "termux-x11 with DRI2."
fi
sleep 1

am start --user 0 -n com.termux.x11/com.termux.x11.MainActivity
sleep 1

# Stop termux.widget if any (save ram)
# kill -9 $(pgrep -f "termux.widget")

# Start XFCE4 session
if [ -f ~/.xfce4-display-1 ]; then
    export DISPLAY=:1
else
    export DISPLAY=:0
fi

if [ ! -f ~/.xfce4-vgl ]; then
    startxfce4
else
    ~/vgl startxfce4
fi

# Terminate x11 and pulseaudio when logged out
sleep 2
kx11pls
else
echo "Command not found"
echo "please input the correct available command."
fi
